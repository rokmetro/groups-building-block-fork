basePath: /gr
definitions:
  createGroupEventRequest:
    properties:
      event_id:
        type: string
    required:
    - event_id
    type: object
  createGroupRequest:
    properties:
      category:
        type: string
      creator_email:
        type: string
      creator_name:
        type: string
      creator_photo_url:
        type: string
      description:
        type: string
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - category
    - privacy
    - title
    type: object
  createMemberRequest:
    properties:
      email:
        type: string
      member_answers:
        items:
          properties:
            answer:
              type: string
            question:
              type: string
          type: object
        type: array
      name:
        type: string
      photo_url:
        type: string
    required:
    - email
    type: object
  createResponse:
    properties:
      inserted_id:
        type: string
    type: object
  getGroupResponse:
    properties:
      category:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      members:
        items:
          properties:
            date_created:
              type: string
            date_updated:
              type: string
            email:
              type: string
            id:
              type: string
            member_answers:
              items:
                properties:
                  answer:
                    type: string
                  question:
                    type: string
                type: object
              type: array
            name:
              type: string
            photo_url:
              type: string
            rejected_reason:
              type: string
            status:
              type: string
          type: object
        type: array
      members_count:
        type: integer
      membership_questions:
        items:
          type: string
        type: array
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      web_url:
        type: string
    type: object
  getGroupsResponse:
    properties:
      category:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      members:
        items:
          properties:
            date_created:
              type: string
            date_updated:
              type: string
            email:
              type: string
            id:
              type: string
            member_answers:
              items:
                properties:
                  answer:
                    type: string
                  question:
                    type: string
                type: object
              type: array
            name:
              type: string
            photo_url:
              type: string
            rejected_reason:
              type: string
            status:
              type: string
          type: object
        type: array
      members_count:
        type: integer
      membership_questions:
        items:
          type: string
        type: array
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      web_url:
        type: string
    type: object
  getUserGroupsResponse:
    properties:
      category:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      members:
        items:
          properties:
            date_created:
              type: string
            date_updated:
              type: string
            email:
              type: string
            id:
              type: string
            member_answers:
              items:
                properties:
                  answer:
                    type: string
                  question:
                    type: string
                type: object
              type: array
            name:
              type: string
            photo_url:
              type: string
            rejected_reason:
              type: string
            status:
              type: string
          type: object
        type: array
      members_count:
        type: integer
      membership_questions:
        items:
          type: string
        type: array
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      web_url:
        type: string
    type: object
  membershipApprovalRequest:
    properties:
      approve:
        type: boolean
      reject_reason:
        type: string
    required:
    - approve
    type: object
  rest.userGroupMembership:
    properties:
      id:
        type: string
      membership_status:
        type: string
      privacy:
        type: string
      title:
        type: string
    type: object
  updateGroupRequest:
    properties:
      category:
        type: string
      description:
        type: string
      image_url:
        type: string
      membership_questions:
        items:
          type: string
        type: array
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      web_url:
        type: string
    required:
    - category
    - privacy
    - title
    type: object
  updateMembershipRequest:
    properties:
      status:
        type: string
    required:
    - status
    type: object
host: localhost
info:
  contact: {}
  description: Rokwire Groups Building Block API Documentation.
  title: Rokwire Groups Building Block API
  version: 1.4.0
paths:
  /api/group-categories:
    get:
      consumes:
      - application/json
      description: Gives all group categories.
      operationId: GetGroupCategories
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - APIKeyAuth: []
  /api/group/{group-id}/event/{event-id}:
    delete:
      consumes:
      - application/json
      description: Deletes a group event
      operationId: DeleteGroupEvent
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      - description: Event ID
        in: path
        name: event-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/group/{group-id}/events:
    get:
      consumes:
      - application/json
      description: Gives the group events.
      operationId: GetGroupEvents
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - AppUserAuth: []
      - APIKeyAuth: []
    post:
      consumes:
      - application/json
      description: Creates a group event
      operationId: CreateGroupEvent
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createGroupEventRequest'
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/group/{group-id}/members:
    delete:
      consumes:
      - text/plain
      description: Deletes a member membership from a group
      operationId: DeleteMember
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      responses:
        "200":
          description: Successfuly deleted
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/group/{group-id}/pending-members:
    delete:
      consumes:
      - text/plain
      description: Deletes a group pending member
      operationId: DeletePendingMember
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      responses:
        "200":
          description: Successfuly deleted
          schema:
            type: string
      security:
      - AppUserAuth: []
    post:
      consumes:
      - application/json
      description: Creates a group pending member
      operationId: CreatePendingMember
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createMemberRequest'
      - description: Group ID
        in: path
        name: group-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/groups:
    get:
      consumes:
      - application/json
      description: Gives the groups list. It can be filtered by category
      operationId: GetGroups
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Category
        in: query
        name: category
        type: string
      - description: Filtering by group's title
        in: query
        name: title
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/getGroupsResponse'
            type: array
      security:
      - APIKeyAuth: []
      - AppUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a group. The user must be part of urn:mace:uiuc.edu:urbana:authman:app-rokwire-service-policy-rokwire
        groups access. Title must be a unique. Category must be one of the categories
        list. Privacy can be public or private
      operationId: CreateGroup
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/createResponse'
      security:
      - AppUserAuth: []
  /api/groups/{id}:
    get:
      consumes:
      - application/json
      description: Gives a group
      operationId: GetGroup
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/getGroupResponse'
      security:
      - AppUserAuth: []
      - APIKeyAuth: []
    put:
      consumes:
      - application/json
      description: Updates a group.
      operationId: UpdateGroup
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateGroupRequest'
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/int/user/{identifier}/groups:
    get:
      consumes:
      - application/json
      description: Gives the user groups memberships
      operationId: GetUserGroupMemberships
      parameters:
      - description: Identifier
        in: path
        name: identifier
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.userGroupMembership'
      security:
      - IntAPIKeyAuth: []
  /api/memberships/{membership-id}:
    delete:
      consumes:
      - application/json
      description: Deletes a membership
      operationId: DeleteMembership
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: Membership ID
        in: path
        name: membership-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
    put:
      consumes:
      - application/json
      description: Updates a membership
      operationId: UpdateMembership
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateMembershipRequest'
      - description: Membership ID
        in: path
        name: membership-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/memberships/{membership-id}/approval:
    put:
      consumes:
      - application/json
      description: Аpprove/Deny a membership
      operationId: MembershipApproval
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/membershipApprovalRequest'
      - description: Membership ID
        in: path
        name: membership-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - AppUserAuth: []
  /api/user/groups:
    get:
      consumes:
      - application/json
      description: Gives the user groups.
      operationId: GetUserGroups
      parameters:
      - description: APP
        in: header
        name: APP
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/getUserGroupsResponse'
            type: array
      security:
      - AppUserAuth: []
      - APIKeyAuth: []
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
schemes:
- https
securityDefinitions:
  APIKeyAuth:
    in: header
    name: ROKWIRE-API-KEY
    type: apiKey
  AppUserAuth:
    in: header (add Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
  IntAPIKeyAuth:
    in: header
    name: ROKWIRE_GS_API_KEY
    type: apiKey
swagger: "2.0"
